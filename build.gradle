/*
 * Copyright (c) 2016-present, 贵州纳雍穿青人李裕江<1032694760@qq.com>, All Right Reserved.
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: "${rootDir}/gradle/git.gradle"
    apply from: "${rootDir}/gradle/config.gradle"
    apply from: "${rootDir}/gradle/dependency.gradle"
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath "com.tencent.mm:AndResGuard-gradle-plugin:${andResGuardVersion}"
    }
}

allprojects {
    repositories {
        //本地的Maven仓库：{USER_HOME}/.m2/repository，如C:/Users/Administrator/.m2/repository
        mavenLocal()
        //项目中的AAR包
        flatDir {
            dir rootProject.file("app/libs")
        }
        //JitPack提供的Maven仓库
        maven { url "https://jitpack.io" }
        //JFrog公司提供的Maven仓库：https://jcenter.bintray.com
        jcenter()
        //谷歌公司提供的Maven仓库：https://maven.google.com
        google()
        //Sonatype公司提供的中央库：http://central.maven.org/maven2
        mavenCentral()
    }
}

subprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            //增加一些编译选项
            //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

task clean(type: Delete) {
    println("********** clean build **********")
    println("delete project dir:" + rootProject.buildDir)
    rootProject.buildDir.deleteDir()
    def dir = new File(new File(".").getAbsolutePath())
    println(" root dir:" + dir.getAbsolutePath())
    dir.eachDirRecurse {
        dir2 ->
            dir2.eachDirMatch(~/build/) {
                directory ->
                    println("delete child dir:" + directory)
                    directory.deleteDir()
            }
    }
}
